{% extends 'base.twig' %}

{% block content %}
<div class="question-container" id="question-container">
  <div class="muted">Pergunta {{ number }} de {{ total }}</div>
  <h1>{{ question.title }}</h1>

  <form method="post" action="{{ nextPost }}" autocomplete="off" id="question-form">
    <div class="options">
      {% for opt in question.options %}
        <label>
          <input type="radio" name="answer" value="{{ opt.id }}"> {{ opt.text }}
        </label>
      {% endfor %}
    </div>

    <div class="row">
      <button class="primary" id="submit-btn" disabled>Responder</button>
    </div>
  </form>
</div>

{% endblock %}

{% block scripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('question-form');
  const submitBtn = document.getElementById('submit-btn');
  const radioButtons = document.querySelectorAll('input[type="radio"]');
  const container = document.getElementById('question-container');
  
  // Clear any pre-selected radio buttons
  radioButtons.forEach(rb => rb.checked = false);
  submitBtn.disabled = true;

  // Enable/disable button based on selection
  radioButtons.forEach(rb => {
    rb.addEventListener('change', function() {
      const anySelected = Array.from(radioButtons).some(rb => rb.checked);
      submitBtn.disabled = !anySelected;
    });
  });

  // AJAX para evitar page reload
  form.addEventListener('submit', function(e) {
    e.preventDefault();
    
    const selectedAnswer = form.querySelector('input[name="answer"]:checked');
    if (!selectedAnswer) return;
    
    // Disable form immediately
    submitBtn.disabled = true;
    submitBtn.style.opacity = '0.7';
    
    // Adicionar transição sutil no card
    const card = document.querySelector('.question-container');
    if (card) {
      card.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
      card.style.opacity = '0.7';
      card.style.transform = 'scale(0.98)';
    }
    
    // Submit form with AJAX
    const formData = new FormData(form);
    
    fetch(form.action, {
      method: 'POST',
      body: formData
    })
    .then(response => {
      if (response.redirected) {
        const redirectUrl = response.url;
        if (redirectUrl.includes('/end')) {
          window.location.href = redirectUrl;
          return;
        }
        return fetch(redirectUrl).then(res => res.text());
      } else if (response.ok) {
        return response.text();
      } else {
        throw new Error('Network response was not ok');
      }
    })
    .then(html => {
      if (html) {
        // Transição rápida para mascarar delay
        const currentCard = document.querySelector('.question-container');
        if (currentCard) {
          // Card atual sai ultra rapidamente
          currentCard.style.transition = 'opacity 0.05s ease, transform 0.05s ease';
          currentCard.style.opacity = '0';
          currentCard.style.transform = 'translateY(-3px)';
          
          // Trocar conteúdo imediatamente
          setTimeout(() => {
            document.body.innerHTML = html;
            
            const newCard = document.querySelector('.question-container');
            if (newCard) {
              // Card novo entra ultra rapidamente
              newCard.style.opacity = '0';
              newCard.style.transform = 'translateY(3px)';
              newCard.style.transition = 'opacity 0.08s ease, transform 0.08s ease';
              
              // Entrar imediatamente
              setTimeout(() => {
                newCard.style.opacity = '1';
                newCard.style.transform = 'translateY(0)';
              }, 2);
            }
            
            initializeForm();
          }, 50);
        } else {
          // Fallback
          document.body.innerHTML = html;
          initializeForm();
        }
      }
    })
    .catch(error => {
      console.error('Error:', error);
      submitBtn.disabled = false;
      submitBtn.style.opacity = '1';
    });
  });
  
  function initializeForm() {
    const newForm = document.getElementById('question-form');
    const newSubmitBtn = document.getElementById('submit-btn');
    const newRadioButtons = document.querySelectorAll('input[type="radio"]');
    
    if (!newForm || !newSubmitBtn) return;
    
    // Clear any pre-selected radio buttons
    newRadioButtons.forEach(rb => rb.checked = false);
    newSubmitBtn.disabled = true;
    
    // Enable/disable button based on selection
    newRadioButtons.forEach(rb => {
      rb.addEventListener('change', function() {
        const anySelected = Array.from(newRadioButtons).some(rb => rb.checked);
        newSubmitBtn.disabled = !anySelected;
      });
    });
    
    // Re-attach form submission handler
    newForm.addEventListener('submit', function(e) {
      e.preventDefault();
      
      const selectedAnswer = newForm.querySelector('input[name="answer"]:checked');
      if (!selectedAnswer) return;
      
      newSubmitBtn.disabled = true;
      newSubmitBtn.style.opacity = '0.7';
      
      // Adicionar transição sutil no card
      const card = document.querySelector('.question-container');
      if (card) {
        card.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
        card.style.opacity = '0.7';
        card.style.transform = 'scale(0.98)';
      }
      
      const formData = new FormData(newForm);
      
      fetch(newForm.action, {
        method: 'POST',
        body: formData
      })
      .then(response => {
        if (response.redirected) {
          const redirectUrl = response.url;
          if (redirectUrl.includes('/end')) {
            window.location.href = redirectUrl;
            return;
          }
          return fetch(redirectUrl).then(res => res.text());
        } else if (response.ok) {
          return response.text();
        } else {
          throw new Error('Network response was not ok');
        }
      })
      .then(html => {
        if (html) {
          // Transição rápida para mascarar delay
          const currentCard = document.querySelector('.question-container');
          if (currentCard) {
            // Card atual sai ultra rapidamente
            currentCard.style.transition = 'opacity 0.05s ease, transform 0.05s ease';
            currentCard.style.opacity = '0';
            currentCard.style.transform = 'translateY(-3px)';
            
            // Trocar conteúdo imediatamente
            setTimeout(() => {
              document.body.innerHTML = html;
              
              const newCard = document.querySelector('.question-container');
              if (newCard) {
                // Card novo entra ultra rapidamente
                newCard.style.opacity = '0';
                newCard.style.transform = 'translateY(3px)';
                newCard.style.transition = 'opacity 0.08s ease, transform 0.08s ease';
                
                // Entrar imediatamente
                setTimeout(() => {
                  newCard.style.opacity = '1';
                  newCard.style.transform = 'translateY(0)';
                }, 2);
              }
              
              initializeForm();
            }, 50);
          } else {
            // Fallback
            document.body.innerHTML = html;
            initializeForm();
          }
        }
      })
      .catch(error => {
        console.error('Error:', error);
        newSubmitBtn.disabled = false;
        newSubmitBtn.style.opacity = '1';
      });
    });
  }
});
</script>
{% endblock %}
